{"version":3,"file":"arc-text.es5.js","sources":["../src/utils.ts","../src/arc-text.ts"],"sourcesContent":["import { IRect } from './interfaces'\n\nexport const splitNode = (node: HTMLElement, splitter: any) => {\n  const wrapperElement = document.createElement('span')\n  const text: string = node.innerText.trim()\n  const chars = splitter ? splitter(text) : [...text.split('')]\n  return chars.map((char: string) => {\n    const parent: any = wrapperElement.cloneNode()\n    parent.insertAdjacentHTML('afterbegin', char === ' ' ? '&nbsp;' : char)\n    return parent\n  })\n}\n\nexport const getRect = (element: HTMLElement): IRect => {\n  const rect = element.getBoundingClientRect()\n  return {\n    height: rect.height,\n    left: rect.left + window.pageXOffset,\n    top: rect.top + window.pageYOffset,\n    width: rect.width\n  }\n}\n\nconst radiansPerDegree = Math.PI / 180\nconst degreesPerRadian = 180 / Math.PI\nexport const chord = (r: number, θ: any) => 2 * r * Math.sin(degreesToRadians(θ / 2))\nexport const radiansToDegrees = (angleInDegrees: number) => angleInDegrees * degreesPerRadian\nexport const degreesToRadians = (angleInDegrees: number) => angleInDegrees * radiansPerDegree\nexport const sagitta = (r: number, θ: any) => r * (1 - Math.cos(degreesToRadians(θ / 2)))\nexport const getLetterRotations = (metrics: any, r: number) =>\n  metrics.reduce(\n    (data: any, { width }: any) => {\n      const rotation = radiansToDegrees(width / r)\n      return {\n        θ: data.θ + rotation,\n        rotations: data.rotations.concat([data.θ + rotation / 2])\n      }\n    },\n    { θ: 0, rotations: [] }\n  )\n","import { IRect } from './interfaces'\nimport { splitNode, getRect, chord, sagitta, getLetterRotations } from './utils'\n\nconst { PI, max, min } = Math\n\nexport default class ArcText {\n  private element: HTMLElement\n  private originalHTML: string\n  private container: HTMLElement\n  public letters: HTMLElement[]\n\n  private fontSize: number\n  private lineHeight: number\n  private metrics: IRect[]\n  private minRadius: number\n  private isForceWidth: boolean\n  private isForceHeight: boolean\n  private radius: number\n  private dir: number\n  private raf: any\n\n  constructor(elm: HTMLElement, splitter: any = undefined) {\n    this.element = elm\n    this.originalHTML = this.element.innerHTML\n\n    const container = document.createElement('div')\n    const fragment = document.createDocumentFragment()\n    container.setAttribute('aria-label', this.element.innerText)\n    container.style.position = 'relative'\n    this.container = container\n\n    this.letters = splitNode(this.element, splitter)\n    this.letters.forEach((letter: any) => fragment.appendChild(letter))\n    container.appendChild(fragment)\n\n    this.element.innerHTML = ''\n    this.element.appendChild(container)\n\n    const { fontSize, lineHeight }: any = window.getComputedStyle(this.element)\n\n    this.fontSize = parseFloat(fontSize)\n    this.lineHeight = parseFloat(lineHeight) || this.fontSize\n    this.metrics = this.letters.map(getRect)\n\n    const totalWidth = this.metrics.reduce((sum: any, { width }: IRect) => sum + width, 0)\n    this.minRadius = totalWidth / PI / 2 + this.lineHeight\n\n    this.dir = 1\n    this.isForceWidth = false\n    this.isForceHeight = true\n    this.radius = this.minRadius\n\n    this.invalidate()\n  }\n\n  public forceWidth(value: boolean) {\n    if (value) {\n      this.isForceWidth = value\n\n      this.invalidate()\n\n      return this\n    }\n\n    return this.isForceWidth\n  }\n\n  public forceHeight(value: boolean) {\n    if (value) {\n      this.isForceHeight = value\n\n      this.invalidate()\n\n      return this\n    }\n\n    return this.isForceHeight\n  }\n\n  /**\n   * Sets the text direction. `1` is clockwise, `-1` is counter-clockwise.\n   *\n   * @name dir\n   * @function\n   * @instance\n   * @memberof ArcText\n   * @param  {number} value A new text direction.\n   * @return {ArcText}   The current instance.\n   *\n   * @example\n   * const arcText = new ArcText(document.getElementById('myElement'));\n   *\n   * // Set the direction to counter-clockwise.\n   * arcText.dir(-1);\n   *\n   * // Set the direction to clockwise.\n   * arcText.dir(1);\n   */\n  public direction(value: number) {\n    if (value) {\n      this.dir = value\n      this.invalidate()\n      return this\n    }\n    return this.dir\n  }\n\n  /**\n   * Gets the text radius in pixels. The default radius is the radius required\n   * for the text to form a complete circle.\n   *\n   * @name radius\n   * @function\n   * @instance\n   * @memberof ArcText\n   * @return {number} The current text radius.\n   *\n   * @example\n   * const arcText = new ArcText(document.getElementById('myElement'));\n   *\n   * arcText.radius();\n   * //=> 150\n   */\n  public arc(value: number) {\n    if (value) {\n      this.radius = max(this.minRadius, value)\n      this.invalidate()\n      return this\n    }\n\n    return this.radius\n  }\n\n  /**\n   * Removes the ArcText effect from the element, restoring it to its\n   * original state.\n   *\n   * @return {ArcText} This instance.\n   *\n   * @example\n   * const arcText = new ArcText(document.getElementById('myElement'));\n   *\n   * // Restore `myElement` to its original state.\n   * arcText.destroy();\n   */\n  public destroy() {\n    this.element.innerHTML = this.originalHTML\n    return this\n  }\n\n  /**\n   * Removes the ArcText effect from the element, restoring it to its\n   * original state.\n   *\n   * @return {ArcText} This instance.\n   *\n   * @example\n   * const arcText = new ArcText(document.getElementById('myElement'));\n   *\n   * // Restore `myElement` to its original state.\n   * arcText.destroy();\n   */\n  public refresh() {\n    return this.invalidate()\n  }\n\n  /**\n   * Invalidates the current state and schedules a task to refresh the layout\n   * in the next animation frame.\n   *\n   * @private\n   *\n   * @return {ArcText} This instance.\n   */\n  private invalidate() {\n    // if(this.raf) {\n    cancelAnimationFrame(this.raf)\n    // }\n    this.raf = requestAnimationFrame(() => {\n      this.render()\n    })\n\n    return this\n  }\n\n  /**\n   * Rotates and positions the letters.\n   *\n   * @private\n   *\n   * @return {ArcText} This instance.\n   */\n  private render() {\n    const originY = this.dir === -1 ? -this.radius + this.lineHeight : this.radius\n    const origin = `center ${originY / this.fontSize}em`\n    const innerRadius = this.radius - this.lineHeight\n    const { rotations, θ } = getLetterRotations(this.metrics, innerRadius)\n\n    this.letters.forEach((letter, index) => {\n      const { style } = letter\n      const rotate = (θ * -0.5 + rotations[index]) * this.dir\n      const translateX = (this.metrics[index].width * -0.5) / this.fontSize\n      const transform = `translateX(${translateX}em) rotate(${rotate}deg)`\n\n      style.position = 'absolute'\n      style.bottom = this.dir === -1 ? '0' : 'auto'\n      style.left = '50%'\n      style.transform = transform\n      style.transformOrigin = origin\n      // style.webkitTransform = transform;\n      // style.webkitTransformOrigin = origin;\n    })\n\n    if (this.isForceHeight) {\n      const height = θ > 180 ? sagitta(this.radius, θ) : sagitta(innerRadius, θ) + this.lineHeight\n\n      this.container.style.height = `${height / this.fontSize}em`\n    }\n\n    if (this.isForceWidth) {\n      const width = chord(this.radius, min(180, θ))\n\n      this.container.style.width = `${width / this.fontSize}em`\n    }\n\n    return this\n  }\n}\n"],"names":[],"mappings":"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"}